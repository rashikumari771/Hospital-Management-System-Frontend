{"version":3,"sources":["assest/136920.jpg","component/schedulingAppt.jsx","component/Logo.jsx","component/Home.jsx","component/logIn.jsx","component/CreateAccount.jsx","component/Diagnose.jsx","component/ShowDiagnoses.jsx","component/ViewMedHist.jsx","component/DocHome.jsx","component/ViewOneHistory.jsx","component/Settings.jsx","component/DocSettings.jsx","component/PatientsViewAppt.jsx","component/NoMedHistFound.jsx","component/DocViewAppt.jsx","component/MakeDoc.jsx","App.js","index.js","assest/logo.jpg","assest/f.mp4"],"names":["module","exports","theDate","theTime","endTime","theConcerns","theSymptoms","theDoc","Logo","React","createElement","className","src","im","alt","theme","global","colors","brand","focus","font","family","SidebarButton","_ref","label","rest","_objectWithoutProperties","_excluded","Button","Object","assign","plain","_ref2","hover","Box","background","undefined","pad","horizontal","vertical","Text","size","SidebarButtons","_useState","useState","_useState2","_slicedToArray","active","setActive","Grommet","full","fill","direction","map","key","onClick","window","location","fetch","email_in_use","then","res","json","string_json","JSON","stringify","email_json","parse","email","console","log","Home","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","renderName","_ref3","name","_createClass","value","Header","tag","elevation","justify","align","flex","style","borderBottom","color","textDecoration","href","Grid","rows","columns","areas","start","end","gridArea","width","animation","type","duration","Heading","Component","AppBar","props","left","right","zIndex","LogIn","state","isDoctor","this","routeChange","bind","history","push","_this2","v","autoPlay","loop","muted","Form","onReset","event","onSubmit","isDoc","password","data","alert","FormField","backgroundColor","opacity","placeholder","required","component","CheckBox","checked","margin","onChange","setState","target","textAlign","primary","withRouter","CreateAccount","method","firstName","lastName","address","gender","conditions","medications","surgeries","validate","regexp","message","DropContent","initialDate","date","initialTime","time","onClose","_React$useState","_React$useState2","setDate","_React$useState3","_React$useState4","setTime","close","parsedTime","split","startHour","parseInt","Calendar","animate","onSelect","showAdjacentDays","gap","Keyboard","onEnter","preventDefault","MaskedInput","mask","options","fixed","DateTimeDropButton","_React$useState5","_React$useState6","_React$useState7","_React$useState8","_React$useState9","_React$useState10","open","setOpen","DropButton","onOpen","dropContent","nextDate","nextTime","setTimeout","Date","toLocaleDateString","Schedule","ConcernsTextArea","_React$useState11","_React$useState12","setValue","height","TextArea","SymptomsTextArea","_React$useState13","_React$useState14","DoctorsDropdown","_useState3","_useState4","doctorsList","setList","useEffect","arr","forEach","i","tmp","Select","doc","match","diagnosis","prescription","id","SchedulingAppt","gen_uid","x","ViewMedHist","medhiststate","getNames","names","patName","_this3","Body","patient","Name","marginBottom","DocHome","ViewOneHistory","medhiststate2","params","allDiagnoses","getHistory","Table","TableBody","TableRow","TableCell","scope","medication","Body2","doctor","concerns","symptoms","Settings","oldPassword","newPassword","affectedRows","DocSettings","PatientsViewAppointments","appointmentsState","user","substring","theStart","theEnd","status","ID","reload","NoMedHistFound","level","alignSelf","DocViewAppt","apptlist","appt","starttime","MakeDoc","schedule","DiagnosisTextArea","PrescriptionTextArea","Diagnose","ShowDiagnoses","diagnoses","App","setComponent","who","Router","Switch","Route","path","render","PatientsViewAppt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a81a8b67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/136920.f9bc8b6c.jpg\";","import React, { Component, useState, useEffect } from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n  Schedule,\r\n} from 'grommet-icons';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Form,\r\n  Text,\r\n  TextArea,\r\n  Grommet,\r\n  Calendar,\r\n  DropButton,\r\n  MaskedInput,\r\n  Keyboard,\r\n  Select\r\n} from 'grommet';\r\nimport '../App.css';\r\nconst theme = {\r\n  global: {\r\n    colors: {\r\n      brand: '#000000',\r\n      focus: \"#000000\",\r\n      active: \"#000000\",\r\n    },\r\n    font: {\r\n      family: 'Lato',\r\n    },\r\n  },\r\n};\r\nvar theDate;\r\nvar theTime;\r\nvar endTime;\r\nvar theConcerns;\r\nvar theSymptoms;\r\nvar theDoc;\r\nconst AppBar = (props) => (\r\n  <Box\r\n    tag='header'\r\n    direction='row'\r\n    align='center'\r\n    justify='between'\r\n    background='brand'\r\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n    style={{ zIndex: '1' }}\r\n    {...props} />\r\n);\r\n\r\nconst DropContent = ({ date: initialDate, time: initialTime, onClose }) => {\r\n  const [date, setDate] = React.useState(initialDate);\r\n  const [time, setTime] = React.useState(initialTime);\r\n\r\n  const close = () => {\r\n    theDate = date;\r\n    theTime = time;\r\n\r\n    //time is string, store it as [hour, min]\r\n    let parsedTime = theTime.split(\":\");\r\n\r\n\r\n    //parse hr string to in and add one hour to start hour\r\n    let startHour = parseInt(parsedTime[0], 10);\r\n    let endHour = startHour + 1;\r\n\r\n    //rejoin into string\r\n    endTime = `${endHour}:00`;\r\n\r\n    console.log(endTime);\r\n    console.log(theDate)\r\n    console.log(theTime);\r\n    onClose(date || initialDate, time || initialTime);\r\n  };\r\n\r\n  return (\r\n    <Box align=\"center\" >\r\n      <Calendar \r\n        animate={false}\r\n        date={date || initialDate}\r\n        onSelect={setDate}\r\n        showAdjacentDays={false}\r\n        required\r\n      />\r\n      <Box flex={false} pad=\"medium\" gap=\"small\">\r\n        <Keyboard\r\n          required\r\n          onEnter={event => {\r\n            event.preventDefault(); // so drop doesn't re-open\r\n            close();\r\n          }}\r\n        >\r\n          <MaskedInput\r\n            mask={[\r\n              {\r\n                length: [1, 2],\r\n                options: [\r\n                  \"0\",\r\n                  \"1\",\r\n                  \"2\",\r\n                  \"3\",\r\n                  \"4\",\r\n                  \"5\",\r\n                  \"6\",\r\n                  \"7\",\r\n                  \"8\",\r\n                  \"9\",\r\n                  \"10\",\r\n                  \"11\",\r\n                  \"12\",\r\n                  \"13\",\r\n                  \"14\",\r\n                  \"15\",\r\n                  \"16\",\r\n                  \"17\",\r\n                  \"18\",\r\n                  \"19\",\r\n                  \"20\",\r\n                  \"21\",\r\n                  \"22\",\r\n                  \"23\",\r\n\r\n                ],\r\n                regexp: /^1[1-2]$|^[0-9]$/,\r\n                placeholder: \"hh\"\r\n              },\r\n              { fixed: \":\" },\r\n              {\r\n                length: 2,\r\n                options: [\"00\"],\r\n                regexp: /^[0-5][0-9]$|^[0-9]$/,\r\n                placeholder: \"mm\"\r\n              }\r\n            ]}\r\n            value={time || initialTime}\r\n            name=\"maskedInput\"\r\n            onChange={event => setTime(event.target.value)}\r\n            required\r\n          />\r\n        </Keyboard>\r\n        <Box flex={false}>\r\n          <Button label=\"Done\" onClick={close} color=\"#00739D\" />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DateTimeDropButton = () => {\r\n  const [date, setDate] = React.useState();\r\n  const [time, setTime] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState();\r\n\r\n  const onClose = (nextDate, nextTime) => {\r\n    setDate(nextDate);\r\n    setTime(nextTime);\r\n    setOpen(false);\r\n    setTimeout(() => setOpen(undefined), 1);\r\n  };\r\n\r\n  return (\r\n   \r\n    <Grommet theme={theme} >\r\n      \r\n      <Box align=\"center\" pad=\"large\" >\r\n        <DropButton\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          dropContent={\r\n            <DropContent date={date} time={time} onClose={onClose} />\r\n          }\r\n        >\r\n          <Box \r\n           style={{backgroundColor:\"#000000\"}}\r\n          direction=\"row\" gap=\"small\" align=\"center\" pad=\"small\">\r\n            <Text color={date ? undefined : \"dark-5\"}>\r\n              {date\r\n                ? `${new Date(date).toLocaleDateString()} ${time}`\r\n                : \"Select date & time\"}\r\n            </Text>\r\n            <Schedule />\r\n          </Box>\r\n        </DropButton>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nconst ConcernsTextArea = () => {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n    theConcerns = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <Grommet theme={theme}>\r\n      <Box\r\n        width=\"medium\"\r\n        height=\"xsmall\"\r\n      >\r\n      <TextArea\r\n        placeholder=\"Enter your concerns...\"\r\n        value={value}\r\n        style={{backgroundColor:\"#FFFFFF\", color:\"#000000\",opacity:0.5}}\r\n        onChange={onChange}\r\n        fill\r\n        required />\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nconst SymptomsTextArea = () => {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n    theSymptoms = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <Grommet theme={theme}>\r\n      <Box\r\n        width=\"medium\"\r\n        height=\"xsmall\"\r\n      >\r\n        <TextArea\r\n          placeholder=\"Enter your symptoms...\"\r\n          value={value}\r\n          style={{backgroundColor:\"#FFFFFF\", color:\"#000000\",opacity:0.5}}\r\n          onChange={onChange} fill\r\n          required />\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nfunction DoctorsDropdown() {\r\n  const [value, setValue] = useState();\r\n  const [doctorsList, setList] = useState([]);\r\n  useEffect(() => {    \r\n    fetch(\"http://localhost:3001/docInfo\")\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      let arr = []\r\n      res.data.forEach(i => {\r\n        let tmp = `${i.name} (${i.email})`;\r\n        arr.push(tmp);\r\n      });\r\n      setList(arr);\r\n    });\r\n  }, []);\r\n  const onChange = event => {\r\n    setValue(event.value);\r\n    let doc = event.value.match(/\\((.*)\\)/)[1];\r\n    theDoc = doc;\r\n  };\r\n  return (\r\n    <Select\r\n    style={{backgroundColor:\"#000000\",color:'#FFFFFF'}}\r\n      options={doctorsList}\r\n      value={value}\r\n      placeholder=\"Select Doctor\"\r\n      onChange={onChange} fill\r\n      required\r\n    />\r\n  );\r\n}\r\n\r\nexport class SchedulingAppt extends Component {\r\n  constuctor() {\r\n  }\r\n  render() {\r\n    return (\r\n      <div className ='main'>\r\n       <img src={im} alt=\"imagesjmdvsghascvghavsk\"></img>\r\n      <div className=\"content\">\r\n      <Grommet theme={theme} full>\r\n        <AppBar>\r\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n        </AppBar>\r\n        <Box align=\"center\" pad=\"small\" gap=\"small\">\r\n          <Form\r\n            onSubmit={({ value }) => {\r\n              //probably fetch uid here, add one\r\n              fetch(\"http://localhost:3001/userInSession\")\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                  var string_json = JSON.stringify(res);\r\n                  var email_json = JSON.parse(string_json);\r\n                  let email_in_use = email_json.email;\r\n                  fetch(\"http://localhost:3001/checkIfApptExists?email=\" + email_in_use + \"&startTime=\" + theTime + \"&date=\" + theDate + \"&docEmail=\" + theDoc)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                      if ((res.data[0])) {\r\n                        window.alert(\"Appointment Clash! Try another doctor or date/time\");\r\n                      } else {\r\n                        fetch(\"http://localhost:3001/genApptUID\")\r\n                          .then(res => res.json())\r\n                          .then(res => {\r\n                            var string_json = JSON.stringify(res);\r\n                            var uid_json = JSON.parse(string_json);\r\n                            let gen_uid = uid_json.id;\r\n                            console.log(gen_uid);\r\n                            fetch(\"http://localhost:3001/schedule?time=\" + theTime + \"&endTime=\" + endTime +\r\n                              \"&date=\" + theDate + \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms + \r\n                              \"&id=\" + gen_uid + \"&doc=\" + theDoc).then((x)=>{\r\n                              fetch(\"http://localhost:3001/addToPatientSeeAppt?email=\" + email_in_use + \"&id=\" + gen_uid +\r\n                                \"&concerns=\" + theConcerns + \"&symptoms=\" + theSymptoms).then((x)=>{\r\n                                  window.alert(\"Appointment successfully scheduled!\");\r\n                                });\r\n                            })\r\n                          });\r\n                      }\r\n                    });\r\n                });\r\n            }}\r\n          >\r\n            <Box align=\"center\" gap=\"small\">\r\n              <DoctorsDropdown />\r\n            </Box>\r\n            <DateTimeDropButton>\r\n            </DateTimeDropButton>\r\n            <ConcernsTextArea />\r\n            <br />\r\n            <SymptomsTextArea />\r\n            <br />\r\n            <Box align=\"center\" pad=\"small\" gap=\"small\">\r\n              <Button\r\n                label=\"Attempt To Schedule\"\r\n                type=\"submit\"\r\n                primary\r\n              />\r\n            </Box>\r\n          </Form>\r\n        </Box>\r\n      </Grommet>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SchedulingAppt;","import React from 'react'\r\nimport im from '../assest/logo.jpg'\r\nconst Logo=()=>{\r\n   return (\r\n    <div className ='main'>\r\n     <img className='logo' src={im} alt=\"logo\"></img>\r\n    </div>\r\n   )\r\n}\r\nexport default Logo","import React, { Component, useState } from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  Grommet,\r\n  Text,\r\n  Grid\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n  global: {\r\n    colors: {\r\n      brand: '#000000',\r\n      focus: '#000000'\r\n    },\r\n    font: {\r\n      family: 'Lato',\r\n    },\r\n  },\r\n};\r\n\r\nconst SidebarButton = ({ label, ...rest }) => (\r\n  <Button plain {...rest}>\r\n    {({ hover }) => (\r\n      <Box\r\n        background={hover ? \"#DADADA\" : undefined}\r\n        pad={{ horizontal: \"large\", vertical: \"medium\" }}\r\n      >\r\n        <Text size=\"large\">{label}</Text>\r\n      </Box>\r\n    )}\r\n  </Button>\r\n);\r\n\r\nconst SidebarButtons = () => {\r\n  const [active, setActive] = useState();\r\n  return (\r\n    <Grommet full theme={theme}>\r\n      <Box fill direction=\"row\">\r\n        <Box background=\"brand\">\r\n          {[\"View Medical History\", \"View Appointments\", \"Schedule Appointment\", \"Settings\", \"Sign Out\"].map(label => (\r\n            <SidebarButton\r\n              key={label}\r\n              label={label}\r\n              active={label === active}\r\n              onClick={() => {\r\n                if (label === \"Schedule Appointment\") {\r\n                  window.location = \"/scheduleAppt\"\r\n                }\r\n                else if (label === \"Sign Out\") {\r\n                  fetch(\"http://localhost:3001/endSession\");\r\n                  window.location = \"/\"\r\n                }\r\n                else if (label === \"View Appointments\") {\r\n                  window.location = \"/PatientsViewAppt\"\r\n                }\r\n                else if (label === \"View Medical History\") {\r\n                  let email_in_use = \"\";\r\n                  fetch(\"http://localhost:3001/userInSession\")\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                      var string_json = JSON.stringify(res);\r\n                      var email_json = JSON.parse(string_json);\r\n                      email_in_use = email_json.email;\r\n                      console.log(\"Email In Use Is :\" + email_in_use);\r\n                      window.location = \"/ViewOneHistory/\" + email_in_use;\r\n                    });\r\n                }\r\n                else if (label === \"Settings\") {\r\n                  window.location = \"/Settings\"\r\n                }\r\n                setActive(label);\r\n              }}\r\n            />\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\nexport class Home extends Component {\r\n  renderName = ({ name, email }) => <div key={email}>{name} {name}</div>\r\n\r\n  render() {\r\n    const Header = () => (\r\n      <Box\r\n        tag='header'\r\n        background='brand'\r\n        pad='small'\r\n        elevation='small'\r\n        justify='between'\r\n        direction='row'\r\n        align='center'\r\n        flex={false}\r\n        style={{borderBottom:\"1px solid grey\"}}\r\n      >\r\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\">\r\n          <Logo></Logo>\r\n        </a>\r\n      </Box>\r\n    );\r\n\r\n    return (\r\n      <div className ='main'>\r\n     <img src={im} alt=\"imagejhsvvjhskjdv\"></img>\r\n    <div className=\"content\">\r\n      <Grommet full={true}\r\n        theme={theme} >\r\n        <Box fill={true}>\r\n          <Header/>\r\n          <Grid\r\n            fill\r\n            rows={['auto', 'flex']}\r\n            columns={['auto', 'flex']}\r\n            areas={[\r\n              { name: 'sidebar', start: [0, 1], end: [0, 1] },\r\n              { name: 'main', start: [1, 1], end: [1, 1] },\r\n            ]}>\r\n            <Box\r\n              gridArea=\"sidebar\"\r\n              width=\"small\"\r\n              animation={[\r\n                { type: 'fadeIn', duration: 300 },\r\n                { type: 'slideRight', size: 'xlarge', duration: 150 },\r\n              ]}\r\n            >\r\n              <SidebarButtons />\r\n            </Box>\r\n            <Box\r\n              gridArea=\"main\"\r\n              justify=\"top\"\r\n              align=\"center\">\r\n              <Box align=\"center\" pad=\"large\">\r\n                <Heading color=\"#FFFFFF\" >\r\n                 <div>Patient  Dashboard</div>\r\n                <div>Stay Strong, Live long</div> \r\n                </Heading>\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Box>\r\n      </Grommet>\r\n      </div>\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport v from '../assest/f.mp4'\r\nimport Logo from './Logo'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grommet,\r\n  FormField,\r\n  Form,\r\n  CheckBox,\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n  global: {\r\n    colors: {\r\n      brand: '#000000',\r\n      focus: \"#000000\",\r\n      active: \"#000000\",\r\n    },\r\n    font: {\r\n      family: 'Lato',\r\n    },\r\n  },\r\n};\r\n\r\nconst AppBar = (props) => (\r\n  <Box\r\n    tag='header'\r\n    direction='row'\r\n    align='center'\r\n    justify='between'\r\n    background='brand'\r\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n    style={{ zIndex: '1' }}\r\n    {...props} />\r\n);\r\n\r\nclass LogIn extends Component {\r\n  state = { isDoctor: false }\r\n\r\n  constuctor() {\r\n    this.routeChange = this.routeChange.bind(this);\r\n  }\r\n\r\n  routeChange() {\r\n    let path = '/Home';\r\n    this.props.history.push(path);\r\n  }\r\n\r\n  render() {\r\n    const { isDoctor } = this.state; // If doctor, will query from doctor table\r\n\r\n    return (\r\n      <div className ='main'>\r\n        <video src={v} autoPlay loop muted></video>\r\n    <div className=\"content\">\r\n      <Grommet theme={theme} full>\r\n        <AppBar>\r\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n        </AppBar>\r\n        \r\n        <Box\r\n          fill\r\n          align=\"center\"\r\n          justify=\"top\"\r\n          pad=\"medium\">\r\n          <Box\r\n            width=\"medium\"\r\n            pad=\"medium\">\r\n            <Form\r\n              onReset={event => console.log(event)}\r\n              onSubmit={({ value }) => {\r\n                console.log(\"Submit\", value);\r\n                if (value.isDoc === true) {\r\n                  fetch(\"http://localhost:3001/checkDoclogin?email=\" + value.email +\r\n                    \"&password=\" + value.password)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                      if (res.data.length === 0) {\r\n                        window.alert(\"Invalid Log In\");\r\n                      } else {\r\n                        window.location = \"DocHome\";\r\n                        console.log(res.data);\r\n                      }\r\n                    });\r\n                } else {\r\n                  fetch(\"http://localhost:3001/checklogin?email=\" + value.email +\r\n                    \"&password=\" + value.password)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                      if (res.data.length === 0) {\r\n                        window.alert(\"Invalid Log In\");\r\n                      } else {\r\n                        window.location = \"/Home\";\r\n                        console.log(res.data);\r\n                      }\r\n                    });\r\n                }\r\n              }\r\n              }>\r\n              <FormField\r\n               style={{backgroundColor:\"#FFFFFF\", color:\"#000000\",opacity:0.5}}\r\n               // color=\"#00739D\"\r\n               label=\"Email\"\r\n               name=\"email\"\r\n               type=\"email\"\r\n               placeholder = \"Please enter your email.\"\r\n               required />\r\n              <FormField\r\n                style={{backgroundColor:\"#FFFFFF\", color:\"#000000\",opacity:0.5}}\r\n                // color=\"#00739D\"\r\n                type='password'\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                placeholder = \"Please enter your password.\"\r\n                required />\r\n              <FormField\r\n              style={{backgroundColor:\"#FFFFFF\", color:\"#000000\",opacity:0.5}}\r\n                component={CheckBox}\r\n                checked={isDoctor}\r\n                margin=\"large\"\r\n                label=\"I'm a doctor\"\r\n                name=\"isDoc\"\r\n                onChange={(event) => {\r\n                  this.setState({ isDoctor: event.target.checked })\r\n                }}\r\n              />\r\n              <Box direction=\"column\" align=\"center\" >\r\n                <Button  label=\"Log In\"\r\n                  style={{ textAlign: 'center' , margin:'1rem', backgroundColor: 'grey',color:'#000000'}}\r\n                  type='submit' fill=\"horizontal\" primary />\r\n                <Button   label=\"Create Account\"\r\n                style={{ textAlign: 'center' , margin:'0.5rem', backgroundColor: 'grey',color:'#000000'}}\r\n                  fill=\"horizontal\"\r\n                  href=\"/createAcc\" />\r\n              </Box>\r\n            </Form>\r\n          </Box>\r\n        </Box>\r\n      </Grommet>\r\n      </div>\r\n            </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(LogIn);","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grommet,\r\n  FormField,\r\n  Form,\r\n  Text\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n  global: {\r\n    colors: {\r\n      brand: '#000000',\r\n      focus: '#000000'\r\n    },\r\n    font: {\r\n      family: 'Lato',\r\n    },\r\n  },\r\n};\r\n\r\nconst AppBar = (props) => (\r\n  <Box\r\n    tag='header'\r\n    direction='row'\r\n    align='center'\r\n    justify='between'\r\n    background='brand'\r\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n    style={{ zIndex: '1' }}\r\n    {...props} />\r\n);\r\nexport class CreateAccount extends Component {\r\n  constuctor() {\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className ='main'>\r\n     <img src={im} alt=\"image_alter\"></img>\r\n    <div className=\"content\">\r\n      <Grommet theme={theme} full>\r\n        <AppBar>\r\n          <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n        </AppBar>\r\n        <Box fill align=\"center\" justify=\"top\">\r\n          <Box width=\"medium\">\r\n          <Text color = \"#AAAAAA\">Patient's registration form:</Text>\r\n            <Form\r\n              onReset={event => console.log(event)}\r\n              method=\"post\"\r\n              onSubmit={({ value }) => {\r\n                console.log(\"Submit\", value);\r\n\r\n                fetch(\"http://localhost:3001/checkIfPatientExists?email=\" + value.email)\r\n                  .then(res => res.json())\r\n                  .then(res => {\r\n                    console.log(res.data[0]);\r\n\r\n                    if ((res.data[0])) {\r\n                      window.alert(\"An account is already associated with that email.\");\r\n                      console.log(\"no user found\");\r\n                    } else {\r\n                      fetch(\"http://localhost:3001/makeAccount?name=\" + value.firstName + \"&lastname=\" + value.lastName + \"&email=\" + value.email\r\n                        + \"&password=\" + value.password + \"&address=\" + value.address + \"&gender=\" + value.gender\r\n                        + \"&conditions=\" + value.conditions + \"&medications=\" + value.medications + \"&surgeries=\" + value.surgeries);\r\n                      window.location = \"/Home\";\r\n                    }\r\n                  });\r\n              }}>\r\n              <FormField\r\n                label=\"First Name\"\r\n                name=\"firstName\"\r\n                placeholder=\"First name\"\r\n                required\r\n                validate={{ regexp: /^[a-z]/i }} />\r\n              <FormField\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                required\r\n                placeholder=\"Last Name\"\r\n                validate={{ regexp: /^[a-z]/i }} />\r\n              <FormField\r\n                label=\"Gender\"\r\n                name=\"gender\"\r\n                placeholder=\"Female or Male\"\r\n                required />\r\n              <FormField\r\n                label=\"Medical History - Conditions\"\r\n                name=\"conditions\"\r\n                placeholder=\"Conditions\"\r\n               />\r\n              <FormField\r\n                label=\"Medical History - Surgeries\"\r\n                name=\"surgeries\"\r\n                placeholder=\"Surgeries\"\r\n               />\r\n              <FormField\r\n                label=\"Medical History - Medications\"\r\n                name=\"medications\"\r\n                placeholder=\"Medications\"\r\n               />\r\n              <FormField\r\n                label=\"Address\"\r\n                name=\"address\"\r\n                placeholder=\"Address\"\r\n                required />\r\n              <FormField\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required />\r\n              <FormField\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                required\r\n                validate={{ regexp: /^(?=.{8,})(?=.*[0-9]{2})/, message: \"@ least 8 characters containing 2 digits\" }} />\r\n              <Box direction=\"row\" align=\"center\" >\r\n                <Button\r\n                  style={{ textAlign: 'center'}}\r\n                  type=\"submit\" primary label=\"Cancel\"\r\n                  fill=\"horizontal\"\r\n                  href=\"/\" />\r\n                <Button\r\n                  label=\"Sign Up\"\r\n                  fill=\"horizontal\"\r\n                  type=\"submit\"\r\n                  primary />\r\n              </Box>\r\n              <Box\r\n                align=\"center\" pad=\"small\">\r\n                <Text>Are you a doctor?</Text>\r\n                <Button\r\n                  primary\r\n                  label=\"I'm a doctor\"\r\n                  href=\"/MakeDoc\" />\r\n              </Box>\r\n            </Form>\r\n          </Box>\r\n        </Box>\r\n      </Grommet>\r\n    </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAccount;","import React, { Component } from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Form,\r\n  TextArea,\r\n  Grommet\r\n} from 'grommet';\r\nimport '../App.css';\r\nconst theme = {\r\n  global: {\r\n    colors: {\r\n      brand: '#000000',\r\n      focus: \"#000000\",\r\n      active: \"#000000\",\r\n    },\r\n    font: {\r\n      family: 'Lato',\r\n    },\r\n  },\r\n};\r\nvar diagnosis;\r\nvar prescription;\r\nvar id;\r\nconst AppBar = (props) => (\r\n  <Box\r\n    tag='header'\r\n    direction='row'\r\n    align='center'\r\n    justify='between'\r\n    background='brand'\r\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n    style={{ zIndex: '1'}}\r\n    {...props} />\r\n);\r\n\r\nconst DiagnosisTextArea = () => {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n    diagnosis = event.target.value;\r\n  };\r\n\r\n  return (\r\n    <Grommet theme={theme}>\r\n      <h4>Diagnosis</h4>\r\n      <TextArea\r\n         style={{width:\"50vw\", height:\"12vw\",backgroundColor:\"#FFFFFF\", color:\"#000000\",opacity:0.5}}\r\n        placeholder=\"Enter Diagnosis\"\r\n        label=\"Enter Diagnosis\"\r\n        value={value}\r\n        onChange={onChange} fill\r\n        required />\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nconst PrescriptionTextArea = () => {\r\n  const [value, setValue] = React.useState(\"\");\r\n  const onChange = event => {\r\n    setValue(event.target.value);\r\n    prescription = event.target.value;\r\n  };\r\n  return (\r\n    <Grommet theme={theme}>\r\n        <h4>Prescription</h4>\r\n        <TextArea\r\n          placeholder=\"Enter Prescription\"\r\n          label=\"Enter Prescription\"\r\n          value={value}\r\n          style={{width:\"50vw\", height:\"12vw\",backgroundColor:\"#FFFFFF\", color:\"#000000\",opacity:0.5}}\r\n          onChange={onChange} fill\r\n          required />\r\n    </Grommet>\r\n  );\r\n};\r\n\r\nexport class Diagnose extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    id = props.match.params.id;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className ='main'>\r\n       <img src={im} alt=\"image_alternauhsddv\"></img>\r\n      <div className=\"content\">\r\n      <Grommet theme={theme} full>\r\n        <AppBar>\r\n        <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n        </AppBar>\r\n        <Box align=\"center\" gap=\"small\">\r\n          <Form\r\n            onSubmit={({ value }) => {\r\n              fetch(\"http://localhost:3001/diagnose?diagnosis=\" + diagnosis + \"&prescription=\" + prescription\r\n              + \"&id=\" + id).then(()=>{\r\n              })\r\n              window.alert(\"Diagnosis Submitted!\");\r\n            }}\r\n          >\r\n            <DiagnosisTextArea />\r\n            <PrescriptionTextArea />\r\n            <br />\r\n            <Box align=\"center\">\r\n            <Button\r\n              label=\"Submit Diagnosis\"\r\n              type=\"submit\"\r\n              primary\r\n            />\r\n            </Box>\r\n          </Form>\r\n        </Box>\r\n      </Grommet>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Diagnose;","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n    Box,\r\n    Grommet,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#000000',\r\n            focus: '#000000'\r\n        },\r\n        font: {\r\n            family: 'Lato',\r\n        },\r\n    },\r\n};\r\n\r\nvar id;\r\n\r\nexport class ShowDiagnoses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        id = props.match.params.id;\r\n    }\r\n    state = { diagnoses: [] }\r\n    componentDidMount() {\r\n        fetch('http://localhost:3001/showDiagnoses?id='+ id)\r\n        .then(res => res.json())\r\n        .then(res => this.setState({ diagnoses: res.data }));\r\n    }\r\n    render() {\r\n        const { diagnoses } = this.state;\r\n        const Header = () => (\r\n            <Box\r\n                tag='header'\r\n                background='brand'\r\n                pad='small'\r\n                elevation='small'\r\n                justify='between'\r\n                direction='row'\r\n                align='center'\r\n                flex={false}\r\n            >\r\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n            </Box>\r\n        );\r\n        const Body = () => (\r\n            <div className=\"container\">\r\n                <div className=\"panel panel-default p50 uth-panel\">\r\n                    {diagnoses.map(diagnosis =>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        <strong>Appointment Id</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{diagnosis.appt}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                                <br />\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        <strong>Doctor</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{diagnosis.doctor}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                                <br />\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        <strong>Diagnosis</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{diagnosis.diagnosis}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                                <br />\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        <strong>Prescription</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{diagnosis.prescription}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    )}\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        );\r\n        return (\r\n            <div className ='main'>\r\n    <img src={im} alt=\"imagekljshllihshfb\"></img>\r\n    <div className=\"content\">\r\n            <Grommet full={true} theme={theme}>\r\n                <Box fill={true}>\r\n                    <Header />\r\n                    <Body />\r\n                </Box>\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ShowDiagnoses;","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Grommet,\r\n    FormField,\r\n    Form\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n      colors: {\r\n        brand: '#000000',\r\n        focus: '#000000'\r\n      },\r\n      font: {\r\n        family: 'Lato',\r\n      },\r\n    },\r\n  };\r\nexport class ViewMedHist extends Component {\r\n    \r\n    state = { medhiststate: [] }\r\n\r\n    componentDidMount() {\r\n        this.getNames(\"\");\r\n        console.log(this.state.names);\r\n    }\r\n\r\n    getNames(value) {\r\n        let patName = \" \";\r\n        if (value !== undefined)\r\n            patName = value;\r\n        console.log(patName);\r\n        fetch('http://localhost:3001/MedHistView?name='+ patName + '&variable=words')\r\n        .then(res => res.json())\r\n        .then(res => this.setState({ medhiststate: res.data }));\r\n    }\r\n\r\n    render() {\r\n        const { medhiststate } = this.state;\r\n\r\n        const Header = () => (\r\n            <Box\r\n                tag='header'\r\n                background='brand'\r\n                pad='small'\r\n                elevation='small'\r\n                justify='between'\r\n                direction='row'\r\n                align='center'\r\n                flex={false}\r\n            >\r\n               <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n\r\n            </Box>\r\n        );\r\n\r\n        const Body = () => (\r\n            <div className=\"container\" style={{width:\"100vw\"}}>\r\n                <div className=\"panel panel-default p50 uth-panel\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{width:\"50vw\"}}>Name</th>\r\n                                <th style={{width:\"50vw\"}}>Profile</th>\r\n                            </tr>\r\n                        </thead> \r\n                        <tbody>\r\n                            {medhiststate.map(patient =>\r\n                                <tr key={patient.id} style={{textAlign:\"center\"}}>\r\n                                    <td>{patient.Name} </td>\r\n                                    <td>\r\n                                        <Button type=\"submit\" primary label=\"Medical Profile\" href={'/ViewOneHistory/' + patient.email}/>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className ='main'>\r\n    <img src={im} alt=\"imagekwjbeefkjbse\"></img>\r\n    <div className=\"content\">\r\n            <Grommet full={true}\r\n            theme = {theme}>\r\n                <Header />\r\n                <Box fill={true} align=\"center\">\r\n                    <Form\r\n                        onSubmit={({ value }) => {\r\n                            this.getNames(value.email);\r\n                        }}>\r\n                        <h4 style={{textAlign:\"center\", marginBottom:\"0\"}}>Search By Name</h4>\r\n                        <FormField name=\"email\" align=\"center\" />\r\n                        <div align=\"center\">\r\n                            <Button type=\"submit\" primary label=\"Submit\" />\r\n                        </div>\r\n                    </Form>\r\n                    <Body />\r\n                </Box>\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewMedHist;","import React, { Component, useState } from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo.jsx'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Heading,\r\n    Grommet,\r\n    Grid,\r\n    Text,\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#000000',\r\n            focus: '#000000'\r\n        },\r\n        font: {\r\n            family: 'Lato',\r\n        },\r\n    },\r\n};\r\n\r\nconst SidebarButton = ({ label, ...rest }) => (\r\n    <Button plain {...rest}>\r\n        {({ hover }) => (\r\n            <Box\r\n                background={hover ? \"#DADADA\" : undefined}\r\n                pad={{ horizontal: \"large\", vertical: \"medium\" }}\r\n            >\r\n                <Text size=\"large\">{label}</Text>\r\n            </Box>\r\n        )}\r\n    </Button>\r\n);\r\n\r\nconst SidebarButtons = () => {\r\n    const [active, setActive] = useState();\r\n    return (\r\n        <Grommet full theme={theme}>\r\n            <Box fill direction=\"row\">\r\n                <Box background=\"brand\">\r\n                    {[\"Appointments\", \"View Patients\", \"Settings\", \"Sign Out\"].map(label => (\r\n                        <SidebarButton\r\n                            key={label}\r\n                            label={label}\r\n                            active={label === active}\r\n                            onClick={() => {\r\n                                if (label === \"Appointments\") {\r\n                                    window.location = \"/ApptList\"\r\n                                }\r\n                                else if (label === \"Sign Out\") {\r\n                                    fetch(\"http://localhost:3001/endSession\");\r\n                                    window.location = \"/\"\r\n                                }\r\n                                else if (label === \"Settings\") {\r\n                                    window.location = \"/DocSettings\"\r\n                                }\r\n                                else if (label === \"View Patients\") {\r\n                                    window.location = \"/MedHistView\"\r\n                                }\r\n                                setActive(label);\r\n                            }}\r\n                        />\r\n                    ))}\r\n\r\n                </Box>\r\n            </Box>\r\n        </Grommet>\r\n    );\r\n};\r\n\r\nexport class DocHome extends Component {\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        const Header = () => (\r\n            <Box\r\n                tag='header'\r\n                background='brand'\r\n                pad='small'\r\n                elevation='small'\r\n                justify='between'\r\n                direction='row'\r\n                align='center'\r\n                flex={false}\r\n                style={{borderBottom:\"1px solid grey\"}}\r\n            >\r\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n\r\n            </Box>\r\n        );\r\n\r\n        return (\r\n            <div className ='main'>\r\n     <img src={im} alt=\"imagesefbsbddvj\"></img>\r\n    <div className=\"content\">\r\n            <Grommet full={true}\r\n                theme={theme}>\r\n                <Box align=\"left\">\r\n                    <Header/>\r\n                    <Grid\r\n                        fill\r\n                        rows={['auto', 'flex']}\r\n                        columns={['auto', 'flex']}\r\n                        areas={[\r\n                            { name: 'sidebar', start: [0, 1], end: [0, 1] },\r\n                            { name: 'main', start: [1, 1], end: [1, 1] },\r\n                        ]}>\r\n                        <Box\r\n                        gridArea=\"sidebar\"\r\n                        width=\"small\"\r\n                        animation={[\r\n                        { type: 'fadeIn', duration: 300 },\r\n                        { type: 'slideRight', size: 'xlarge', duration: 150 },\r\n                        ]}\r\n                        >\r\n                            <SidebarButtons />\r\n                        </Box>\r\n                        <Box\r\n                            gridArea=\"main\"\r\n                            justify=\"top\"\r\n                            align=\"center\">\r\n                            <Box align=\"center\" pad=\"large\">\r\n                                <Heading\r\n                                    color=\"#FFFFFF\">Doctor Dashboard\r\n                                </Heading>\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                </Box>\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DocHome;","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n    Box,\r\n    Grommet,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#000000',\r\n            focus: '#000000'\r\n        },\r\n        font: {\r\n            family: 'Lato',\r\n        },\r\n    },\r\n};\r\n\r\nexport class ViewOneHistory extends Component {\r\n    state = { medhiststate: [], medhiststate2: []}\r\n    componentDidMount() {\r\n        const { email } = this.props.match.params;\r\n        this.allDiagnoses(email);\r\n        this.getHistory(email);\r\n    }\r\n\r\n    getHistory(value) {\r\n        let email = \"'\" + value + \"'\";\r\n        fetch('http://localhost:3001/OneHistory?patientEmail='+ email)\r\n        .then(res => res.json())\r\n            .then(res => this.setState({ medhiststate: res.data }));\r\n    }\r\n\r\n    allDiagnoses(value) {\r\n        let email = \"'\" + value + \"'\";\r\n        fetch('http://localhost:3001/allDiagnoses?patientEmail='+ email)\r\n        .then(res => res.json())\r\n        .then(res => this.setState({ medhiststate2: res.data }));\r\n    }\r\n\r\n    render() {\r\n        const { medhiststate } = this.state;\r\n        const { medhiststate2 } = this.state;\r\n        const Header = () => (\r\n            <Box\r\n                tag='header'\r\n                background='brand'\r\n                pad='small'\r\n                elevation='small'\r\n                justify='between'\r\n                direction='row'\r\n                align='center'\r\n                flex={false}\r\n            >\r\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n            </Box>\r\n        );\r\n        const Body = () => (\r\n            <div className=\"container\">\r\n                <div className=\"panel panel-default p50 uth-panel\">\r\n                    {medhiststate.map(patient =>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        <strong>Name</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.name}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell><strong>Email</strong></TableCell>\r\n                                    <TableCell>{patient.email}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        <strong>Gender</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {patient.gender}\r\n                                    </TableCell>\r\n                                    <TableCell />\r\n                                    <TableCell>\r\n                                        <strong>Address</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.address}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <strong>Conditions</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.conditions}\r\n                                        </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <strong>Surgeries</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.surgeries}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <strong>Medications</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.medication}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    )}\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        );\r\n        const Body2 = () => (\r\n            <div className=\"container\">\r\n                <div className=\"panel panel-default p50 uth-panel\">\r\n                    {medhiststate2.map(patient =>\r\n                        <div>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        <strong>Date</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.date.split('T')[0]}</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell><strong>Doctor</strong></TableCell>\r\n                                    <TableCell>{patient.doctor}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        <strong>Concerns</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {patient.concerns}\r\n                                    </TableCell>\r\n                                    <TableCell />\r\n                                    <TableCell>\r\n                                        <strong>Symptoms</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.symptoms}</TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <strong>Diagnosis</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.diagnosis}\r\n                                        </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <strong>Prescription</strong>\r\n                                    </TableCell>\r\n                                    <TableCell>{patient.prescription}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                        <hr />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className ='main'>\r\n    <img src={im} alt='imagejhbfjbskdbsvljsb'></img>\r\n    <div className=\"content\">\r\n            <Grommet full={true} theme={theme}>\r\n                <Box fill={true}>\r\n                    <Header />\r\n                    <Body />\r\n                    <Body2 />\r\n                </Box>\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ViewOneHistory;","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Grommet,\r\n    FormField,\r\n    Form,\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#000000',\r\n            focus: '#000000'\r\n        },\r\n        font: {\r\n            family: 'Lato',\r\n        },\r\n    },\r\n};\r\n\r\nconst AppBar = (props) => (\r\n    <Box\r\n        tag='header'\r\n        direction='row'\r\n        align='center'\r\n        justify='between'\r\n        background='brand'\r\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n        style={{ zIndex: '1' }}\r\n        {...props} />\r\n);\r\nexport class Settings extends Component {\r\n    constuctor() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div className ='main'>\r\n    <img src={im} alt=\"imagedhdgvhkvasjcvjsav\"></img>\r\n    <div className=\"content\">\r\n            <Grommet theme={theme} full>\r\n                <Box >\r\n                    <AppBar>\r\n                    <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n                    </AppBar>\r\n                    <Box pad=\"small\">\r\n                    <Form\r\n                    onSubmit={({ value }) => {\r\n                        let email_in_use = \"\";\r\n                        console.log(value);\r\n                        fetch(\"http://localhost:3001/userInSession\")\r\n                          .then(res => res.json())\r\n                          .then(res => {\r\n                            var string_json = JSON.stringify(res);\r\n                            var email_json = JSON.parse(string_json);\r\n                            email_in_use = email_json.email;\r\n                            console.log(email_in_use);\r\n                            console.log(\"eg\");\r\n                          fetch(\"http://localhost:3001/resetPasswordPatient?email=\" + \r\n                          email_in_use + \"&oldPassword=\" + value.oldPassword + \"&newPassword=\" + \r\n                          value.newPassword, {method: 'POST'})\r\n                          .then(res => res.json())\r\n                          .then(res => {\r\n                            let didUpdate = res.data.affectedRows;\r\n                            if(didUpdate === 0) {\r\n                                window.alert(\"Entered your old password incorrectly\");\r\n                            } else {\r\n                                window.alert(\"Password Reset Successful\");\r\n                            }\r\n                          });\r\n                          });\r\n                    }}>\r\n                        <h3>Password Change</h3>\r\n                        <FormField\r\n                            type='password'\r\n                            label=\"Old password\"\r\n                            name=\"oldPassword\"\r\n                            required\r\n                        />\r\n                        <br />\r\n                        <FormField\r\n                            label=\"New password\"\r\n                            name=\"newPassword\"\r\n                            required\r\n                        />\r\n                        <br />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            label=\"Change Password\"\r\n                            primary\r\n                        />\r\n                    </Form>\r\n                    </Box>\r\n                </Box>\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Settings;","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Grommet,\r\n    FormField,\r\n    Form\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#000000',\r\n            focus: '#000000'\r\n        },\r\n        font: {\r\n            family: 'Lato',\r\n        },\r\n    },\r\n};\r\n\r\nconst AppBar = (props) => (\r\n    <Box\r\n        tag='header'\r\n        direction='row'\r\n        align='center'\r\n        justify='between'\r\n        background='brand'\r\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n        style={{ zIndex: '1' }}\r\n        {...props} />\r\n);\r\n\r\nexport class DocSettings extends Component {\r\n    constuctor() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div className ='main'>\r\n     <img src={im} alt=\"imagekjsbsvbsjbvdk\"></img>\r\n    <div className=\"content\">\r\n            <Grommet theme={theme} full>\r\n                <Box >\r\n                    <AppBar>\r\n                    <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n                    </AppBar>\r\n                    <Box pad=\"small\">\r\n                    <Form\r\n                    onSubmit={({ value }) => {\r\n                        let email_in_use = \"\";\r\n                        console.log(value);\r\n                        fetch(\"http://localhost:3001/userInSession\")\r\n                          .then(res => res.json())\r\n                          .then(res => {\r\n                            var string_json = JSON.stringify(res);\r\n                            var email_json = JSON.parse(string_json);\r\n                            email_in_use = email_json.email;\r\n                            console.log(email_in_use);\r\n                          fetch(\"http://localhost:3001/resetPasswordDoctor?email=\" + \r\n                          email_in_use + \"&oldPassword=\" + value.oldPassword + \"&newPassword=\" + \r\n                          value.newPassword, {method: 'POST'})\r\n                          .then(res => res.json())\r\n                          .then(res => {\r\n                            let didUpdate = res.data.affectedRows;\r\n                            if(didUpdate === 0) {\r\n                                window.alert(\"Old Password is wrong\");\r\n                            } else {\r\n                                window.alert(\"Password Reset Successful\");\r\n                            }\r\n                          });\r\n                          });\r\n\r\n                    }}>\r\n                        <h3>Password Change</h3>\r\n                        <FormField\r\n                            type='password'\r\n                            label=\"Old Password\"\r\n                            name=\"oldPassword\"\r\n                            required\r\n                        />\r\n                        <br />\r\n                        <FormField\r\n                            label=\"New Password\"\r\n                            name=\"newPassword\"\r\n                            required\r\n                        />\r\n                        <br />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            label=\"Change Password\"\r\n                            primary\r\n                        />\r\n                    </Form>\r\n                    </Box>\r\n                </Box>\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DocSettings;","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo'\r\nimport {\r\n    Box,\r\n    Grommet,\r\n    Button\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#000000',\r\n            focus: '#000000'\r\n        },\r\n        font: {\r\n            family: 'Lato',\r\n        },\r\n    },\r\n};\r\n\r\nconst AppBar = (props) => (\r\n    <Box\r\n        tag='header'\r\n        direction='row'\r\n        align='center'\r\n        justify='between'\r\n        background='brand'\r\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n        style={{ zIndex: '1' }}\r\n        {...props} />\r\n);\r\n\r\nexport class PatientsViewAppointments extends Component {\r\n    state = { appointmentsState: [] }\r\n    componentDidMount() {\r\n        this.getNames(\"\");\r\n    }\r\n    getNames(value) {\r\n        let patName = value;\r\n        console.log(patName);\r\n        fetch(\"http://localhost:3001/userInSession\")\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                var string_json = JSON.stringify(res);\r\n                var email_json = JSON.parse(string_json);\r\n                let email_in_use = email_json.email;\r\n                fetch('http://localhost:3001/patientViewAppt?email=' + email_in_use)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        this.setState({ appointmentsState: res.data });\r\n                    });\r\n            });\r\n    }\r\n    render() {\r\n        const { appointmentsState } = this.state;\r\n        const Body = () => (\r\n            <div className=\"container\">\r\n                <div className=\"panel panel-default p50 uth-panel\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Date of Appointment</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Concerns</th>\r\n                                <th>Symptoms</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {appointmentsState.map(patient =>\r\n                                <tr key={patient.user}>\r\n                                    <td align=\"center\" >\r\n                                        {new Date(patient.theDate).toLocaleDateString().substring(0, 10)}\r\n                                    </td>\r\n                                    <td align=\"center\" >{patient.theStart.substring(0, 5)}</td>\r\n                                    <td align=\"center\" >{patient.theEnd.substring(0, 5)}</td>\r\n                                    <td align=\"center\">{patient.theConcerns} </td>\r\n                                    <td align=\"center\">{patient.theSymptoms}</td>\r\n                                    <td align=\"center\">{patient.status}</td>\r\n                                    <td>\r\n                                        <Button type=\"submit\" primary label=\"See Diagnosis\"\r\n                                        href={`/showDiagnoses/${patient.ID}`}\r\n                                        ></Button>     \r\n                                    </td> \r\n                                    <td>\r\n                                    {   patient.status===\"NotDone\"?\r\n                                        <Button type=\"submit\" primary label=\"Cancel\"\r\n                                        onClick = {() => {\r\n                                            fetch('http://localhost:3001/deleteAppt?uid='+ patient.ID)\r\n                                            window.location.reload()\r\n                                        }}\r\n                                        ></Button>\r\n                                        :\r\n                                        <Button type=\"submit\" primary label=\"Delete\"\r\n                                        onClick = {() => {\r\n                                            fetch('http://localhost:3001/deleteAppt?uid='+ patient.ID)\r\n                                            window.location.reload()\r\n                                        }}\r\n                                        ></Button>\r\n                                    }\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className ='main'>\r\n     <img src={im} alt=\"imagesjbehfjkbsef\"></img>\r\n    <div className=\"content\">\r\n            <Grommet theme={theme} full>\r\n                <Box >\r\n                    <AppBar>\r\n                    <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n                    </AppBar>\r\n                    <Body />\r\n                </Box>\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PatientsViewAppointments;","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\n\r\nimport {\r\n    Box,\r\n    Heading,\r\n    Grommet,\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#000000',\r\n            focus: '#000000'\r\n        },\r\n        font: {\r\n            family: 'Lato',\r\n        },\r\n    },\r\n};\r\n\r\nexport class NoMedHistFound extends Component {\r\n    componentDidMount() {\r\n    }\r\n    render() {\r\n        const Header = () => (\r\n            <Box\r\n                tag='header'\r\n                background='brand'\r\n                pad='small'\r\n                elevation='small'\r\n                justify='between'\r\n                direction='row'\r\n                align='center'\r\n                flex={false}\r\n            >\r\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Heading level='3' margin='none'>HMS</Heading></a>\r\n\r\n            </Box>\r\n        );\r\n        const Body = () => (\r\n            <div className=\"container\">\r\n                <div className=\"panel panel-default p50 uth-panel\" >\r\n                    <Heading alignSelf=\"center\" textAlign=\"right\" margin=\"large\">Medical History Not Found<br /></Heading>\r\n                </div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className ='main'>\r\n     <img src={im} alt=\"imagehjbsdsjkjsdbdf\"></img>\r\n    <div className=\"content\">\r\n            <Grommet full={true} theme={theme}>\r\n                <Box fill={true}>\r\n                    <Header />\r\n                    <Body />\r\n                </Box>\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NoMedHistFound;","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo from './Logo.jsx'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Grommet,\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n      colors: {\r\n        brand: '#000000',\r\n        focus: '#000000'\r\n      },\r\n      font: {\r\n        family: 'Lato',\r\n      },\r\n    },\r\n  };\r\n\r\nexport class DocViewAppt extends Component {\r\n    state = { apptlist: [] }\r\n\r\n    componentDidMount() {\r\n        this.getNames();\r\n    }\r\n\r\n    getNames() {\r\n        fetch('http://localhost:3001/doctorViewAppt')\r\n        .then(res => res.json())\r\n        .then(res => this.setState({ apptlist: res.data }));\r\n    }\r\n\r\n    render() {\r\n        const { apptlist } = this.state;\r\n        const Header = () => (\r\n            <Box\r\n                tag='header'\r\n                background='brand'\r\n                pad='small'\r\n                elevation='small'\r\n                justify='between'\r\n                direction='row'\r\n                align='center'\r\n                flex={false}\r\n            >\r\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n            </Box>\r\n        );\r\n\r\n        const Body = () => (\r\n            <div className=\"container\">\r\n                <div className=\"panel panel-default p50 uth-panel\">\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Date</th>\r\n                                <th>Start Time</th>\r\n                                <th>Concerns</th>\r\n                                <th>Symptoms</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {apptlist.map(appt =>\r\n                                <tr key={appt.name}>\r\n                                    <td>{appt.id}</td>\r\n                                    <td>{appt.name}</td>\r\n                                    <td>{new Date(appt.date).toLocaleDateString().substring(0,10)} </td>\r\n                                    <td>{appt.starttime}</td>\r\n                                    <td>{appt.concerns}</td>\r\n                                    <td>{appt.symptoms}</td>\r\n                                    <td>{appt.status}</td>\r\n                                    <td>\r\n                                        <Button label=\"Diagnose\"\r\n                                          style={{color:'#FFFFFF',backgroundColor:'#000000'}}\r\n                                        href={`/Diagnose/${appt.id}`}\r\n                                        ></Button>     \r\n                                    </td> \r\n                                    <td>\r\n                                        {appt.status === \"NotDone\"?\r\n                                            <Button label=\"Cancel\"\r\n                                            style={{color:'#FFFFFF',backgroundColor:'#000000'}}\r\n                                            onClick = {() => {\r\n                                                fetch('http://localhost:3001/deleteAppt?uid='+ appt.id)\r\n                                                window.location.reload();\r\n                                            }}\r\n                                            ></Button>\r\n                                        :<div></div>}\r\n                                    </td> \r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        return (\r\n            <div className ='main'>\r\n     <img src={im} alt=\"image_alternate\"></img>\r\n    <div className=\"content\">\r\n            <Grommet full={true}\r\n            theme = {theme}>\r\n                <Header />\r\n                <Box fill={true}>\r\n                    <Body />\r\n                </Box>\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DocViewAppt;","import React, { Component} from 'react';\r\nimport im from '../assest/136920.jpg'\r\nimport Logo  from './Logo'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Grommet,\r\n    FormField,\r\n    Form,\r\n    Text,\r\n\r\n} from 'grommet';\r\n\r\nimport '../App.css';\r\n\r\nconst theme = {\r\n    global: {\r\n        colors: {\r\n            brand: '#000000',\r\n            focus: \"#000000\",\r\n            active: \"#000000\",\r\n        },\r\n        font: {\r\n            family: 'Lato',\r\n        },\r\n    },\r\n};\r\n\r\nconst AppBar = (props) => (\r\n    <Box\r\n        tag='header'\r\n        direction='row'\r\n        align='center'\r\n        justify='between'\r\n        background='brand'\r\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\r\n        style={{ zIndex: '1' }}\r\n        {...props} />\r\n);\r\n\r\nexport class MakeDoc extends Component {\r\n    constuctor() {\r\n    }\r\n    render() {\r\n        return (\r\n            <div className ='main'>\r\n     <img src={im} alt=\"imagenjdfdbvb,sdjb\"></img>\r\n    <div className=\"content\">\r\n            <Grommet theme={theme} full>\r\n                <AppBar>\r\n                <a style={{ color: 'inherit', textDecoration: 'inherit'}} href=\"/\"><Logo></Logo></a>\r\n                </AppBar>\r\n                <Box fill align=\"center\" justify=\"top\">\r\n                    <Box width=\"medium\">\r\n                    <Text color = \"#AAAAAA\">Doctor's registration form:</Text>\r\n                        <Form\r\n                            onReset={event => console.log(event)}\r\n                            method=\"post\"\r\n                            onSubmit={({ value }) => {\r\n                                console.log(\"Submit\", value);\r\n                                console.log(value.email)\r\n                                fetch(\"http://localhost:3001/checkIfDocExists?email=\" + value.email)\r\n                                    .then(res => res.json())\r\n                                    .then(res => {\r\n                                        console.log(res.data[0]);\r\n                                        if ((res.data[0])) {\r\n                                            window.alert(\"A doctor is already associated with that email.\");\r\n                                            console.log(\"no user found\");\r\n                                        } else {\r\n                                            fetch(\"http://localhost:3001/makeDocAccount?name=\" + value.firstName + \"&lastname=\" + value.lastName + \"&email=\" + value.email\r\n                                                + \"&password=\" + value.password + \"&gender=\" + value.gender + \"&schedule=\" + value.schedule);\r\n                                            window.location = \"/DocHome\";\r\n                                        }\r\n                                    });\r\n                            }} >\r\n                            <FormField\r\n                                label=\"First Name\"\r\n                                name=\"firstName\"\r\n                                required\r\n                                placeholder=\"Please enter your first name.\"\r\n                                validate={{ regexp: /^[a-z]/i }} />\r\n                            <FormField\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                required\r\n                                placeholder=\"Please enter your last name.\"\r\n                                validate={{ regexp: /^[a-z]/i }} />\r\n                            <FormField\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Please enter your email.\"\r\n                                required />\r\n                            <FormField\r\n                                label=\"Schedule No\"\r\n                                name=\"schedule\"\r\n                                placeholder=\"Please enter schedule number\"\r\n                                required />\r\n                            <FormField\r\n                                label=\"Gender\"\r\n                                name=\"gender\"\r\n                                placeholder=\"Female or Male\"\r\n                                required />\r\n                            <FormField\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                required\r\n                                placeholder=\"Please enter your password.\"\r\n                                validate={{ regexp: /^(?=.{8,})(?=.*[0-9]{2})/, message: \"@ least 8 characters containing 2 digits\" }} />\r\n                            <Box direction=\"row\" align=\"center\" >\r\n                                <Button\r\n                                    style={{ textAlign: 'center',color: '#FFFFFF' }}\r\n                                    type=\"submit\" primary label=\"Cancel\"\r\n                                    fill=\"horizontal\"\r\n                                    href=\"/\" />\r\n                                <Button\r\n                                    label=\"Sign Up\"\r\n                                    fill=\"horizontal\"\r\n                                    type=\"submit\"\r\n                                    primary />\r\n                            </Box>\r\n\r\n                        </Form>\r\n                    </Box>\r\n                </Box>\r\n\r\n            </Grommet>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MakeDoc;","import React,{useEffect, useState} from \"react\";\r\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\r\nimport Home from './component/Home.jsx';\r\nimport LogIn from './component/logIn.jsx';\r\nimport CreateAccount from './component/CreateAccount.jsx';\r\nimport SchedulingAppt from './component/schedulingAppt.jsx';\r\nimport ViewMedHist from './component/ViewMedHist.jsx';\r\nimport DocHome from './component/DocHome.jsx';\r\nimport ViewOneHistory from './component/ViewOneHistory.jsx';\r\nimport Settings from './component/Settings.jsx';\r\nimport DocSettings from './component/DocSettings.jsx';\r\nimport PatientsViewAppt from './component/PatientsViewAppt.jsx';\r\nimport NoMedHistFound from './component/NoMedHistFound.jsx';\r\nimport DocViewAppt from './component/DocViewAppt.jsx';\r\nimport MakeDoc from './component/MakeDoc.jsx';\r\nimport Diagnose from './component/Diagnose.jsx';\r\nimport ShowDiagnoses from './component/ShowDiagnoses.jsx';\r\nexport default function App() {\r\n  let [component, setComponent] = useState(<LogIn />)\r\n  useEffect(()=>{\r\n    fetch(\"http://localhost:3001/userInSession\")\r\n      .then(res => res.json())\r\n      .then(res => {\r\n      let string_json = JSON.stringify(res);\r\n      let email_json = JSON.parse(string_json);\r\n      let email = email_json.email;\r\n      let who = email_json.who;\r\n      if(email === \"\"){\r\n        setComponent(<LogIn />)\r\n      }\r\n      else{\r\n        if(who===\"pat\"){\r\n          setComponent(<Home />)\r\n        }\r\n        else{\r\n          setComponent(<DocHome />)\r\n        }\r\n      }\r\n    });\r\n  }, [])\r\n  return (\r\n    <Router>\r\n      <div>\r\n        \r\n        <Switch>\r\n          <Route path=\"/NoMedHistFound\">\r\n            <NoMedHistFound />\r\n          </Route>\r\n          <Route path=\"/MakeDoc\">\r\n            <MakeDoc />\r\n          </Route>\r\n          <Route path=\"/Settings\">\r\n            <Settings />\r\n          </Route>\r\n          <Route path=\"/MedHistView\">\r\n            <ViewMedHist />\r\n          </Route>\r\n          <Route path=\"/scheduleAppt\">\r\n            <SchedulingAppt />\r\n          </Route>\r\n          <Route path=\"/showDiagnoses/:id\" render={props=><ShowDiagnoses {...props} />} />\r\n          <Route path=\"/Diagnose/:id\" render={props=><Diagnose {...props} />} />\r\n          <Route name=\"onehist\" path=\"/ViewOneHistory/:email\" render={props=><ViewOneHistory {...props} />}/>\r\n          <Route path=\"/Home\">\r\n              <Home />\r\n          </Route>\r\n          <Route path=\"/createAcc\">\r\n            <CreateAccount />\r\n          </Route>\r\n          <Route path=\"/DocHome\">\r\n            <DocHome />\r\n          </Route>\r\n          <Route path=\"/PatientsViewAppt\">\r\n              <PatientsViewAppt />\r\n          </Route>\r\n          <Route path=\"/DocSettings\">\r\n            <DocSettings />\r\n          </Route>\r\n          <Route path=\"/ApptList\">\r\n            <DocViewAppt />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {component}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.bfb7a8c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/f.230190f1.mp4\";"],"sourceRoot":""}